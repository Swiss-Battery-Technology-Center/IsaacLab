#################################################################
# Copyright (c) 2024 SBTC Switzerland Innovation Park Biel Bienne
# Author: Özhan Özen
# Email: oezhan.oezen@sipbb.ch, sbtc@sipbb.ch
# Created: 2024-06-04
#################################################################

# Dockerfile to install IsaacLab + Isaac Sim + ROS2, with conda as the default env.

# Extend from the base IsaacLab image
FROM isaac-lab-base AS ros2

ARG ISAACLAB_PATH_ARG
ENV ISAACLAB_PATH=${ISAACLAB_PATH_ARG}

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install wget

# Install Miniconda and configure the environment
RUN DEBIAN_FRONTEND=noninteractive \
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda && \
    rm Miniconda3-latest-Linux-x86_64.sh && \
    /opt/miniconda/bin/conda init bash

ENV PATH="/opt/miniconda/bin:$PATH"
RUN conda update -n base -c defaults conda

# Activate IsaacLab conda environment and run setup scripts
RUN --mount=type=cache,target=/opt/miniconda/pkgs \
    DEBIAN_FRONTEND=noninteractive ${ISAACLAB_PATH}/isaaclab.sh --conda

RUN echo "conda deactivate && conda activate isaaclab" >> ${HOME}/.bashrc

SHELL ["/opt/miniconda/bin/conda", "run", "-n", "isaaclab", "/bin/bash", "-c"]

RUN DEBIAN_FRONTEND=noninteractive \
    ${ISAACLAB_PATH}/isaaclab.sh --install

WORKDIR ${ISAACLAB_PATH}/

# Copy additional scripts
COPY docker/sbtc/bash_scripts/runisaac.sh ./

# Setup environment and symbolic links
RUN ln -s "/docs" ${ISAACLAB_PATH}/_docs && \
    echo "export LIVESTREAM=2" >> ${HOME}/.bashrc

# Install packages that do not install correctly during setup
RUN DEBIAN_FRONTEND=noninteractive ${ISAACLAB_PATH}/_isaac_sim/python.sh -m pip install psutil && \
    pip install torch-tb-profiler

# Which ROS2 apt package to install
ARG ROS2_APT_PACKAGE
# Home of the docker user, generally /root
ARG DOCKER_USER_HOME

# Install additional Python modules (move to requirement.txt?)
RUN DEBIAN_FRONTEND=noninteractive \
    pip install \
    matplotlib \
    spatialmath-python \
    numpy \
    scipy \
    toppra \
    onnxruntime \
    onnx \
    fast-tsp

# ROS2 Humble Apt installations
RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && apt-get install -y --no-install-recommends \
    curl \
    # Install ROS2 Humble \
    software-properties-common && \
    add-apt-repository universe && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo jammy) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && apt-get install -y --no-install-recommends \
    ros-humble-${ROS2_APT_PACKAGE} \
    ros-humble-vision-msgs \
    # Install both FastRTPS and CycloneDDS
    ros-humble-rmw-cyclonedds-cpp \
    ros-humble-rmw-fastrtps-cpp \
    # This includes various dev tools including colcon
    ros-dev-tools && \
    apt -y autoremove && apt clean autoclean && \
    rm -rf /var/lib/apt/lists/* && \
    # Add sourcing of setup.bash to .bashrc
    echo "source /opt/ros/humble/setup.bash" >> ${HOME}/.bashrc

# Copy the RMW specifications for ROS2
# https://docs.omniverse.nvidia.com/isaacsim/latest/installation/install_ros.html#enabling-the-ros-bridge-extension
COPY docker/.ros/ ${DOCKER_USER_HOME}/.ros/
